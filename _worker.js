/*
 * Last update: 2025-09-13 19:13:21 UTC
 * We are all REvil - version based on commit f763e02cc8da4242eda0fdaae9c671fa0a706ca6
 */

import { connect } from 'cloudflare:sockets';
let userID = 'd342d11e-d424-4583-b36e-524ab1f0afa4', proxyIPs = ['nima.nscl.ir:443'], proxyIP = proxyIPs[Math['floor'](Math['random']() * proxyIPs['length'])], proxyPort = proxyIP['includes'](':') ? proxyIP['split'](':')[0x1] : '443';
const SCAMALYTICS_API_BASE_URL = 'https://api11.scamalytics.com/v3/';
let scamalyticsUsername = 'dianaclk01', scamalyticsApiKey = 'c57eb62bbde89f00742cb3f92d7127f96132c9cea460f18c08fd5e62530c5604', DOH_ENDPOINT = 'https://1.1.1.1/dns-query', socks5Relay = ![], enableSocks = ![], socks5Address = '', parsedSocks5Address = {};
const TK_B64 = {
        'vless': 'dmxlc3M=',
        'ws': 'd3M=',
        'type': 'dHlwZQ==',
        'protocol': 'cHJvdG9jb2w=',
        'network': 'bmV0d29yaw==',
        'host': 'aG9zdA==',
        'sni': 'c25p',
        'tls': 'dGxz',
        'path': 'cGF0aA==',
        'encryption': 'ZW5jcnlwdGlvbg==',
        'none': 'bm9uZQ=='
    }, TK = {};
for (const k in TK_B64)
    TK[k] = typeof atob === 'function' ? atob(TK_B64[k]) : TK_B64[k];
const CONSTANTS = {
    'VLESS_PROTOCOL': 'vless',
    'AT_SYMBOL': '@',
    'CUSTOM_SUFFIX': 'Diana',
    'URL_ED_PARAM': 'ed=2560'
};
export default {
    async 'fetch'(a, b, c) {
        try {
            const d = b['UUID'] || userID, f = b['PROXYIP'] || proxyIP, g = b['SCAMALYTICS_USERNAME'] || scamalyticsUsername, h = b['SCAMALYTICS_API_KEY'] || scamalyticsApiKey, i = {
                    'userID': d,
                    'socks5Address': b['SOCKS5'] || socks5Address,
                    'socks5Relay': b['SOCKS5_RELAY'] === 'true' || socks5Relay,
                    'proxyIP': f['split'](':')[0x0],
                    'proxyPort': f['split'](':')[0x1] || '443',
                    'enableSocks': ![],
                    'parsedSocks5Address': {}
                };
            if (!isValidUUID(d['split'](',')[0x0]))
                return new Response('UUID\x20is\x20not\x20valid:\x20' + d, { 'status': 0x190 });
            const j = new URL(a['url']), l = j['hostname'];
            if (j['pathname']['startsWith']('/sub/' + d))
                return new Response(GenSub(d, l), {
                    'status': 0xc8,
                    'headers': { 'Content-Type': 'text/plain;charset=utf-8' }
                });
            if (j['pathname']['startsWith']('/ipsub/' + d))
                return await generateIpSubscription(d, l);
            if (j['pathname'] === '/scamalytics-lookup') {
                const n = j['searchParams']['get']('ip');
                if (!n)
                    return new Response('Missing\x20IP\x20parameter', { 'status': 0x190 });
                if (!g || !h)
                    return new Response('Scamalytics\x20API\x20credentials\x20not\x20configured.', { 'status': 0x1f4 });
                const o = '' + SCAMALYTICS_API_BASE_URL + g + '/?key=' + h + '&ip=' + n;
                try {
                    const p = await fetch(o), q = await p['json'](), r = new Headers({
                            'Content-Type': 'application/json',
                            'Access-Control-Allow-Origin': '*'
                        });
                    return new Response(JSON['stringify'](q), { 'headers': r });
                } catch (s) {
                    return new Response(s['toString'](), { 'status': 0x1f4 });
                }
            }
            const m = a['headers']['get']('Upgrade');
            if (m && m['toLowerCase']() === 'websocket')
                return await ProtocolOverWSHandler(a, i);
            if (j['pathname']['startsWith']('/' + d)) {
                const t = getBeautifulConfig(d, l, f);
                return new Response(t, {
                    'status': 0xc8,
                    'headers': { 'Content-Type': 'text/html;\x20charset=utf-8' }
                });
            }
            return new Response('404\x20â€”\x20UUID\x20Not\x20Found.\x20Peace\x20&\x20Love', { 'status': 0x194 });
        } catch (u) {
            let v = u;
            return new Response(v['toString'](), { 'status': 0x1f4 });
        }
    }
};
function getBeautifulConfig(a, b, c) {
    const d = 'vless://' + a + '@' + b + ':443?path=/assets?ed=2560&eh=Sec-WebSocket-Protocol&security=tls&alpn=http/1.1&encryption=none&host=' + b + '&fp=chrome&type=ws&sni=' + b + '#Xray', e = 'vless://' + a + '@' + b + ':443/?type=ws&encryption=none&flow=&host=' + b + '&path=/assets&ed=2560&eh=Sec-WebSocket-Protocol&security=tls&sni=' + b + '&alpn=h3&fp=safari#' + b + '-Singbox', f = 'https://' + b + '/ipsub/' + a, g = encodeURIComponent(f), h = 'clash://install-config?url=https://revil-sub.pages.dev/sub/clash-meta?url=' + g + '&remote_config=&udp=false&ss_uot=false&show_host=false&forced_ws0rtt=true';
    let i = '\x0a\x20\x20<!doctype\x20html>\x0a\x20\x20<html\x20lang=\x22en\x22>\x0a\x20\x20<head>\x0a\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22\x20/>\x0a\x09<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22\x20/>\x0a\x09<title>VLESS\x20Proxy\x20Configuration</title>\x0a\x09<link\x20rel=\x22icon\x22\x20href=\x22https://raw.githubusercontent.com/sahar-km/zx/refs/heads/main/assets/favicon.svg\x22\x20type=\x22image/svg\x22>\x0a\x09<link\x20rel=\x22preconnect\x22\x20href=\x22https://fonts.googleapis.com\x22>\x0a\x20\x20\x20\x20<link\x20rel=\x22preconnect\x22\x20href=\x22https://fonts.gstatic.com\x22\x20crossorigin>\x0a\x20\x20\x20\x20<link\x20href=\x22https://fonts.googleapis.com/css2?family=Fira+Code:wght@300..700&display=swap\x22\x20rel=\x22stylesheet\x22>\x0a\x09\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20*\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-sizing:\x20border-box;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20@font-face\x20{\x0a\x09\x20\x20\x20\x20\x20\x20font-family:\x20\x22Aldine\x20401\x20BT\x20Web\x22;\x0a\x09\x20\x20\x20\x20\x20\x20src:\x20url(\x22https://pub-7a3b428c76aa411181a0f4dd7fa9064b.r2.dev/Aldine401_Mersedeh.woff2\x22)\x20format(\x22woff2\x22);\x0a\x09\x20\x20\x20\x20\x20\x20font-weight:\x20400;\x20font-style:\x20normal;\x20font-display:\x20swap;\x0a\x09\x20\x20\x20\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20@font-face\x20{\x0a\x09\x20\x20\x20\x20\x20\x20font-family:\x20\x22Styrene\x20B\x20LC\x22;\x0a\x09\x20\x20\x20\x20\x20\x20src:\x20url(\x22https://pub-7a3b428c76aa411181a0f4dd7fa9064b.r2.dev/StyreneBLC-Regular.woff2\x22)\x20format(\x22woff2\x22);\x0a\x09\x20\x20\x20\x20\x20\x20font-weight:\x20400;\x20font-style:\x20normal;\x20font-display:\x20swap;\x0a\x09\x20\x20\x20\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20@font-face\x20{\x0a\x09\x20\x20\x20\x20\x20\x20font-family:\x20\x22Styrene\x20B\x20LC\x22;\x0a\x09\x20\x20\x20\x20\x20\x20src:\x20url(\x22https://pub-7a3b428c76aa411181a0f4dd7fa9064b.r2.dev/StyreneBLC-Medium.woff2\x22)\x20format(\x22woff2\x22);\x0a\x09\x20\x20\x20\x20\x20\x20font-weight:\x20500;\x20font-style:\x20normal;\x20font-display:\x20swap;\x0a\x09\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20:root\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20--background-primary:\x20#2a2421;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--background-secondary:\x20#35302c;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--background-tertiary:\x20#413b35;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--border-color:\x20#5a4f45;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--border-color-hover:\x20#766a5f;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--text-primary:\x20#e5dfd6;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--text-secondary:\x20#b3a89d;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--text-accent:\x20#ffffff;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--accent-primary:\x20#be9b7b;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--accent-secondary:\x20#d4b595;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--accent-tertiary:\x20#8d6e5c;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--accent-primary-darker:\x20#8a6f56;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--button-text-primary:\x20#2a2421;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--button-text-secondary:\x20var(--text-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20--shadow-color:\x20rgba(0,\x200,\x200,\x200.35);\x0a\x20\x20\x20\x20\x20\x20\x20\x20--shadow-color-accent:\x20rgba(190,\x20155,\x20123,\x200.4);\x0a\x20\x20\x20\x20\x20\x20\x20\x20--border-radius:\x208px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--transition-speed:\x200.2s;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--transition-speed-fast:\x200.1s;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--transition-speed-medium:\x200.3s;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--transition-speed-long:\x200.6s;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--status-success:\x20#70b570;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--status-error:\x20#e05d44;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--status-warning:\x20#e0bc44;\x0a\x20\x20\x20\x20\x20\x20\x20\x20--status-info:\x20#4f90c4;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20--serif:\x20\x22Aldine\x20401\x20BT\x20Web\x22,\x20\x22Times\x20New\x20Roman\x22,\x20Times,\x20Georgia,\x20ui-serif,\x20serif;\x0a\x09\x20\x20\x20\x20\x20\x20--sans-serif:\x20\x22Styrene\x20B\x20LC\x22,\x20-apple-system,\x20BlinkMacSystemFont,\x20\x22Segoe\x20UI\x22,\x20Helvetica,\x20Arial,\x20\x22Noto\x20Color\x20Emoji\x22,\x20sans-serif;\x0a\x09\x20\x20\x20\x20\x20\x20--mono-serif:\x20\x22Fira\x20Code\x22,\x20Cantarell,\x20\x22Courier\x20Prime\x22,\x20monospace;\x0a\x09\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20body\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20var(--sans-serif);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x2016px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-weight:\x20400;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-style:\x20normal;\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20var(--background-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--text-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x203rem;\x0a\x20\x20\x20\x20\x20\x20\x20\x20line-height:\x201.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20-webkit-font-smoothing:\x20antialiased;\x0a\x20\x20\x20\x20\x20\x20\x20\x20-moz-osx-font-smoothing:\x20grayscale;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.container\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20max-width:\x20768px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin:\x2020px\x20auto;\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x200\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-radius:\x20var(--border-radius);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200\x206px\x2015px\x20rgba(0,\x200,\x200,\x200.2),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200\x200\x2025px\x208px\x20var(--shadow-color-accent);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20box-shadow\x20var(--transition-speed-medium)\x20ease;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.container:hover\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200\x208px\x2020px\x20rgba(0,\x200,\x200,\x200.25),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x200\x200\x2035px\x2010px\x20var(--shadow-color-accent);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.header\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20text-align:\x20center;\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin-bottom:\x2040px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding-top:\x2030px;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.header\x20h1\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20var(--serif);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-weight:\x20400;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x202rem;\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--text-accent);\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin-top:\x200px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin-bottom:\x202px;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.header\x20p\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--text-secondary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-weight:\x20400;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-card\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background:\x20var(--background-secondary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-radius:\x20var(--border-radius);\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x2020px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin-bottom:\x2024px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border:\x201px\x20solid\x20var(--border-color);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20border-color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20box-shadow\x20var(--transition-speed)\x20ease;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-card:hover\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-color:\x20var(--border-color-hover);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x200\x204px\x208px\x20var(--shadow-color);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-title\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20var(--serif);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x2022px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-weight:\x20400;\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--accent-secondary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin-bottom:\x2016px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding-bottom:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-bottom:\x201px\x20solid\x20var(--border-color);\x0a\x20\x20\x20\x20\x20\x20\x20\x20display:\x20flex;\x0a\x20\x20\x20\x20\x20\x20\x20\x20align-items:\x20center;\x0a\x20\x20\x20\x20\x20\x20\x20\x20justify-content:\x20space-between;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20relative;\x0a\x20\x20\x20\x20\x20\x20\x20\x20overflow:\x20hidden;\x0a\x20\x20\x20\x20\x20\x20\x20\x20display:\x20flex;\x0a\x20\x20\x20\x20\x20\x20\x20\x20align-items:\x20center;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gap:\x204px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20var(--serif);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x206px\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-radius:\x206px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--accent-secondary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20var(--background-tertiary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20border:\x201px\x20solid\x20var(--border-color);\x0a\x20\x20\x20\x20\x20\x20\x20\x20cursor:\x20pointer;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20background-color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20border-color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20transform\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20box-shadow\x20var(--transition-speed)\x20ease;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn::before\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20content:\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20absolute;\x0a\x20\x20\x20\x20\x20\x20\x20\x20top:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20left:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20100%;\x0a\x20\x20\x20\x20\x20\x20\x20\x20height:\x20100%;\x0a\x20\x20\x20\x20\x20\x20\x20\x20background:\x20linear-gradient(120deg,\x20transparent,\x20rgba(255,\x20255,\x20255,\x200.2),\x20transparent);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateX(-100%);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20transform\x20var(--transition-speed-long)\x20ease;\x0a\x20\x20\x20\x20\x20\x20\x20\x20z-index:\x20-1;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn:hover\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20letter-spacing:\x200.5px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-weight:\x20600;\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20#4d453e;\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--accent-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-color:\x20var(--border-color-hover);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(-2px);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x200\x204px\x208px\x20var(--shadow-color);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn:hover::before\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateX(100%);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn:active\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(0px)\x20scale(0.98);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x20none;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.refresh-icon\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20height:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20stroke:\x20currentColor;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-content\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20relative;\x0a\x20\x20\x20\x20\x20\x20\x20\x20background:\x20var(--background-tertiary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-radius:\x20var(--border-radius);\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x2016px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin-bottom:\x2020px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border:\x201px\x20solid\x20var(--border-color);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.config-content\x20pre\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20overflow-x:\x20auto;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20var(--mono-serif);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--text-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20white-space:\x20pre-wrap;\x0a\x20\x20\x20\x20\x20\x20\x20\x20word-break:\x20break-all;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.button\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20display:\x20inline-flex;\x0a\x20\x20\x20\x20\x20\x20\x20\x20align-items:\x20center;\x0a\x20\x20\x20\x20\x20\x20\x20\x20justify-content:\x20center;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gap:\x208px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x208px\x2016px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-radius:\x20var(--border-radius);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x2013px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-weight:\x20500;\x0a\x20\x20\x20\x20\x20\x20\x20\x20cursor:\x20pointer;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border:\x201px\x20solid\x20var(--border-color);\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20var(--background-tertiary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--button-text-secondary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20background-color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20border-color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20transform\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20box-shadow\x20var(--transition-speed)\x20ease;\x0a\x20\x20\x20\x20\x20\x20\x20\x20-webkit-tap-highlight-color:\x20transparent;\x0a\x20\x20\x20\x20\x20\x20\x20\x20touch-action:\x20manipulation;\x0a\x20\x20\x20\x20\x20\x20\x20\x20text-decoration:\x20none;\x0a\x20\x20\x20\x20\x20\x20\x20\x20overflow:\x20hidden;\x0a\x20\x20\x20\x20\x20\x20\x20\x20z-index:\x201;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.button:focus-visible\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20outline:\x202px\x20solid\x20var(--accent-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20outline-offset:\x202px;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.button:disabled\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20opacity:\x200.6;\x0a\x20\x20\x20\x20\x20\x20\x20\x20cursor:\x20not-allowed;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20none;\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x20none;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20opacity\x20var(--transition-speed)\x20ease;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.button:not(.copy-buttons):not(.client-btn):hover\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20#4d453e;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-color:\x20var(--border-color-hover);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(-1px);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x200\x202px\x204px\x20var(--shadow-color);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.button:not(.copy-buttons):not(.client-btn):active\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(0px)\x20scale(0.98);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x20none;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.copy-buttons\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20relative;\x0a\x20\x20\x20\x20\x20\x20\x20\x20display:\x20flex;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gap:\x204px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20overflow:\x20hidden;\x0a\x20\x20\x20\x20\x20\x20\x20\x20align-self:\x20center;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-family:\x20var(--serif);\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-size:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20padding:\x206px\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-radius:\x206px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--accent-secondary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20border:\x201px\x20solid\x20var(--border-color);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20background-color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20border-color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20transform\x20var(--transition-speed)\x20ease,\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20box-shadow\x20var(--transition-speed)\x20ease;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.copy-buttons::before,\x0a\x20\x20\x20\x20\x20\x20.client-btn::before\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20content:\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20absolute;\x0a\x20\x20\x20\x20\x20\x20\x20\x20top:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20left:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20100%;\x0a\x20\x20\x20\x20\x20\x20\x20\x20height:\x20100%;\x0a\x20\x20\x20\x20\x20\x20\x20\x20background:\x20linear-gradient(120deg,\x20transparent,\x20rgba(255,\x20255,\x20255,\x200.2),\x20transparent);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateX(-100%);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20transform\x20var(--transition-speed-long)\x20ease;\x0a\x20\x20\x20\x20\x20\x20\x20\x20z-index:\x20-1;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.copy-buttons:hover::before,\x0a\x20\x20\x20\x20\x20\x20.client-btn:hover::before\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateX(100%);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.copy-buttons:hover\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20#4d453e;\x0a\x20\x20\x20\x20\x20\x20\x20\x20letter-spacing:\x200.5px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20font-weight:\x20600;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-color:\x20var(--border-color-hover);\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(-2px);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x200\x204px\x208px\x20var(--shadow-color);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.copy-buttons:active\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(0px)\x20scale(0.98);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x20none;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.copy-icon\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20height:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20stroke:\x20currentColor;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-buttons\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20display:\x20grid;\x0a\x20\x20\x20\x20\x20\x20\x20\x20grid-template-columns:\x20repeat(auto-fill,\x20minmax(300px,\x201fr));\x0a\x20\x20\x20\x20\x20\x20\x20\x20gap:\x2012px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20margin-top:\x2016px;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20100%;\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20var(--accent-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--background-tertiary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-radius:\x206px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-color:\x20var(--accent-primary-darker);\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20relative;\x0a\x20\x20\x20\x20\x20\x20\x20\x20overflow:\x20hidden;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20all\x200.3s\x20cubic-bezier(0.2,\x200.8,\x200.2,\x201);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x200\x202px\x205px\x20rgba(0,\x200,\x200,\x200.15);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn::before\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20left:\x20-100%;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20transform\x200.6s\x20ease;\x0a\x20\x20\x20\x20\x20\x20\x20\x20z-index:\x201;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn::after\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20content:\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20absolute;\x0a\x20\x20\x20\x20\x20\x20\x20\x20bottom:\x20-5px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20left:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20100%;\x0a\x20\x20\x20\x20\x20\x20\x20\x20height:\x205px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20background:\x20linear-gradient(90deg,\x20var(--accent-tertiary),\x20var(--accent-secondary));\x0a\x20\x20\x20\x20\x20\x20\x20\x20opacity:\x200;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20all\x200.3s\x20ease;\x0a\x20\x20\x20\x20\x20\x20\x20\x20z-index:\x200;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn:hover\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20text-transform:\x20uppercase;\x0a\x20\x20\x20\x20\x20\x20\x20\x20letter-spacing:\x200.3px;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(-3px);\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20var(--accent-secondary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20color:\x20var(--button-text-primary);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x200\x205px\x2015px\x20rgba(190,\x20155,\x20123,\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20border-color:\x20var(--accent-secondary);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn:hover::before\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateX(100%);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn:hover::after\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20opacity:\x201;\x0a\x20\x20\x20\x20\x20\x20\x20\x20bottom:\x200;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn:active\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20translateY(0)\x20scale(0.98);\x0a\x20\x20\x20\x20\x20\x20\x20\x20box-shadow:\x200\x202px\x203px\x20rgba(0,\x200,\x200,\x200.2);\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20var(--accent-primary-darker);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn\x20.client-icon\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20relative;\x0a\x20\x20\x20\x20\x20\x20\x20\x20z-index:\x202;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20transform\x200.3s\x20ease;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn:hover\x20.client-icon\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20transform:\x20rotate(15deg)\x20scale(1.1);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn\x20.button-text\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20position:\x20relative;\x0a\x20\x20\x20\x20\x20\x20\x20\x20z-index:\x202;\x0a\x20\x20\x20\x20\x20\x20\x20\x20transition:\x20letter-spacing\x200.3s\x20ease;\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20.client-btn:hover\x20.button-text\x20{\x20letter-spacing:\x200.5px;\x20}\x0a\x09\x20\x20\x20\x20.client-icon\x20{\x20width:\x2018px;\x20height:\x2018px;\x20border-radius:\x206px;\x20background-color:\x20var(--background-secondary);\x20display:\x20flex;\x20align-items:\x20center;\x20justify-content:\x20center;\x20flex-shrink:\x200;\x20}\x0a\x09\x20\x20\x20\x20.client-icon\x20svg\x20{\x20width:\x2014px;\x20height:\x2014px;\x20fill:\x20var(--accent-secondary);\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20.button.copied\x20{\x20background-color:\x20var(--accent-secondary)\x20!important;\x20color:\x20var(--background-tertiary)\x20!important;\x20}\x0a\x09\x20\x20\x20\x20.button.error\x20{\x20background-color:\x20#c74a3b\x20!important;\x20color:\x20var(--text-accent)\x20!important;\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20.footer\x20{\x20text-align:\x20center;\x20margin-top:\x2020px;\x20padding-bottom:\x2040px;\x20color:\x20var(--text-secondary);\x20font-size:\x2012px;\x20}\x0a\x09\x20\x20\x20\x20.footer\x20p\x20{\x20margin-bottom:\x200px;\x20}\x0a\x09\x20\x20\x20\x20\x0a\x09\x20\x20\x20\x20::-webkit-scrollbar\x20{\x20width:\x208px;\x20height:\x208px;\x20}\x0a\x09\x20\x20\x20\x20::-webkit-scrollbar-track\x20{\x20background:\x20var(--background-primary);\x20border-radius:\x204px;\x20}\x0a\x09\x20\x20\x20\x20::-webkit-scrollbar-thumb\x20{\x20background:\x20var(--border-color);\x20border-radius:\x204px;\x20border:\x202px\x20solid\x20var(--background-primary);\x20}\x0a\x09\x20\x20\x20\x20::-webkit-scrollbar-thumb:hover\x20{\x20background:\x20var(--border-color-hover);\x20}\x0a\x09\x20\x20\x20\x20*\x20{\x20scrollbar-width:\x20thin;\x20scrollbar-color:\x20var(--border-color)\x20var(--background-primary);\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20.ip-info-grid\x20{\x20display:\x20grid;\x20grid-template-columns:\x20repeat(auto-fit,\x20minmax(230px,\x201fr));\x20gap:\x2024px;\x20}\x0a\x09\x20\x20\x20\x20.ip-info-section\x20{\x20background-color:\x20var(--background-tertiary);\x20border-radius:\x20var(--border-radius);\x20padding:\x2016px;\x20border:\x201px\x20solid\x20var(--border-color);\x20display:\x20flex;\x20flex-direction:\x20column;\x20gap:\x2020px;\x20}\x0a\x09\x20\x20\x20\x20.ip-info-header\x20{\x20display:\x20flex;\x20align-items:\x20center;\x20gap:\x2010px;\x20border-bottom:\x201px\x20solid\x20var(--border-color);\x20padding-bottom:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20.ip-info-header\x20svg\x20{\x20width:\x2020px;\x20height:\x2020px;\x20stroke:\x20var(--accent-secondary);\x20}\x0a\x09\x20\x20\x20\x20.ip-info-header\x20h3\x20{\x20font-family:\x20var(--serif);\x20font-size:\x2018px;\x20font-weight:\x20400;\x20color:\x20var(--accent-secondary);\x20margin:\x200;\x20}\x0a\x09\x20\x20\x20\x20.ip-info-content\x20{\x20display:\x20flex;\x20flex-direction:\x20column;\x20gap:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20.ip-info-item\x20{\x20display:\x20flex;\x20flex-direction:\x20column;\x20gap:\x202px;\x20}\x0a\x09\x20\x20\x20\x20.ip-info-item\x20.label\x20{\x20font-size:\x2011px;\x20color:\x20var(--text-secondary);\x20text-transform:\x20uppercase;\x20letter-spacing:\x200.5px;\x20}\x0a\x09\x20\x20\x20\x20.ip-info-item\x20.value\x20{\x20font-size:\x2014px;\x20color:\x20var(--text-primary);\x20word-break:\x20break-all;\x20line-height:\x201.4;\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20.badge\x20{\x20display:\x20inline-flex;\x20align-items:\x20center;\x20justify-content:\x20center;\x20padding:\x203px\x208px;\x20border-radius:\x2012px;\x20font-size:\x2011px;\x20font-weight:\x20500;\x20text-transform:\x20uppercase;\x20letter-spacing:\x200.5px;\x20}\x0a\x09\x20\x20\x20\x20.badge-yes\x20{\x20background-color:\x20rgba(112,\x20181,\x20112,\x200.15);\x20color:\x20var(--status-success);\x20border:\x201px\x20solid\x20rgba(112,\x20181,\x20112,\x200.3);\x20}\x0a\x09\x20\x20\x20\x20.badge-no\x20{\x20background-color:\x20rgba(224,\x2093,\x2068,\x200.15);\x20color:\x20var(--status-error);\x20border:\x201px\x20solid\x20rgba(224,\x2093,\x2068,\x200.3);\x20}\x0a\x09\x20\x20\x20\x20.badge-neutral\x20{\x20background-color:\x20rgba(79,\x20144,\x20196,\x200.15);\x20color:\x20var(--status-info);\x20border:\x201px\x20solid\x20rgba(79,\x20144,\x20196,\x200.3);\x20}\x0a\x09\x20\x20\x20\x20.badge-warning\x20{\x20background-color:\x20rgba(224,\x20188,\x2068,\x200.15);\x20color:\x20var(--status-warning);\x20border:\x201px\x20solid\x20rgba(224,\x20188,\x2068,\x200.3);\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20.skeleton\x20{\x20display:\x20block;\x20background:\x20linear-gradient(90deg,\x20var(--background-tertiary)\x2025%,\x20var(--background-secondary)\x2050%,\x20var(--background-tertiary)\x2075%);\x20background-size:\x20200%\x20100%;\x20animation:\x20loading\x201.5s\x20infinite;\x20border-radius:\x204px;\x20height:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20@keyframes\x20loading\x20{\x200%\x20{\x20background-position:\x20200%\x200;\x20}\x20100%\x20{\x20background-position:\x20-200%\x200;\x20}\x20}\x0a\x09\x20\x20\x20\x20.country-flag\x20{\x20display:\x20inline-block;\x20width:\x2018px;\x20height:\x20auto;\x20max-height:\x2014px;\x20margin-right:\x206px;\x20vertical-align:\x20middle;\x20border-radius:\x202px;\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20\x20@media\x20(max-width:\x20768px)\x20{\x0a\x09\x20\x20\x20\x20\x20\x20body\x20{\x20padding:\x2020px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.container\x20{\x20padding:\x200\x2014px;\x20width:\x20min(100%,\x20768px);\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-grid\x20{\x20display:\x20grid;\x20grid-template-columns:\x20repeat(auto-fit,\x20minmax(170px,\x201fr));\x20gap:\x2018px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.header\x20h1\x20{\x20font-size:\x201.8rem;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.header\x20p\x20{\x20font-size:\x200.7rem\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-section\x20{\x20padding:\x2014px;\x20gap:\x2018px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20h3\x20{\x20font-size:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20{\x20gap:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-content\x20{\x20gap:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-item\x20.label\x20{\x20font-size:\x2011px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-item\x20.value\x20{\x20font-size:\x2013px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-card\x20{\x20padding:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-title\x20{\x20font-size:\x2018px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn\x20{\x20font-size:\x2011px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-content\x20pre\x20{\x20font-size:\x2012px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.client-buttons\x20{\x20grid-template-columns:\x20repeat(auto-fill,\x20minmax(260px,\x201fr));\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.button\x20{\x20font-size:\x2012px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20\x20.copy-buttons\x20{\x20font-size:\x2011px;\x20}\x0a\x09\x20\x20\x20\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20@media\x20(max-width:\x20480px)\x20{\x0a\x09\x20\x20\x20\x20\x20\x20body\x20{\x20padding:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.container\x20{\x20padding:\x200\x2012px;\x20width:\x20min(100%,\x20390px);\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.header\x20h1\x20{\x20font-size:\x2020px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.header\x20p\x20{\x20font-size:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-section\x20{\x20padding:\x2014px;\x20gap:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-grid\x20{\x20display:\x20grid;\x20grid-template-columns:\x20repeat(auto-fit,\x20minmax(200px,\x201fr));\x20gap:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20h3\x20{\x20font-size:\x2014px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20{\x20gap:\x206px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-content\x20{\x20gap:\x206px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20svg\x20{\x20width:\x2018px;\x20height:\x2018px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-item\x20.label\x20{\x20font-size:\x209px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-item\x20.value\x20{\x20font-size:\x2011px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.badge\x20{\x20padding:\x202px\x206px;\x20font-size:\x2010px;\x20border-radius:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-card\x20{\x20padding:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-title\x20{\x20font-size:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn\x20{\x20font-size:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-content\x20{\x20padding:\x2012px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-content\x20pre\x20{\x20font-size:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.client-buttons\x20{\x20grid-template-columns:\x20repeat(auto-fill,\x20minmax(200px,\x201fr));\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.button\x20{\x20padding:\x204px\x208px;\x20font-size:\x2011px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.copy-buttons\x20{\x20font-size:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.footer\x20{\x20font-size:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20@media\x20(max-width:\x20359px)\x20{\x0a\x09\x20\x20\x20\x20\x20\x20body\x20{\x20padding:\x2012px;\x20font-size:\x2014px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.container\x20{\x20max-width:\x20100%;\x20padding:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.header\x20h1\x20{\x20font-size:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.header\x20p\x20{\x20font-size:\x206px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-section\x20{\x20padding:\x2012px;\x20gap:\x2012px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-grid\x20{\x20display:\x20grid;\x20grid-template-columns:\x20repeat(auto-fit,\x20minmax(150px,\x201fr));\x20gap:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20h3\x20{\x20font-size:\x2013px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20{\x20gap:\x204px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-content\x20{\x20gap:\x204px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-header\x20svg\x20{\x20width:\x2016px;\x20height:\x2016px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-item\x20.label\x20{\x20font-size:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.ip-info-item\x20.value\x20{\x20font-size:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.badge\x20{\x20padding:\x201px\x204px;\x20font-size:\x209px;\x20border-radius:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-card\x20{\x20padding:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-title\x20{\x20font-size:\x2013px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-title\x20.refresh-btn\x20{\x20font-size:\x209px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-content\x20{\x20padding:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.config-content\x20pre\x20{\x20font-size:\x208px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.client-buttons\x20{\x20grid-template-columns:\x20repeat(auto-fill,\x20minmax(150px,\x201fr));\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.button\x20{\x20padding:\x203px\x206px;\x20font-size:\x2010px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.copy-buttons\x20{\x20font-size:\x209px;\x20}\x0a\x09\x20\x20\x20\x20\x20\x20.footer\x20{\x20font-size:\x208px;\x20}\x0a\x09\x20\x20\x20\x20}\x0a\x09\x0a\x09\x20\x20\x20\x20@media\x20(min-width:\x20360px)\x20{\x20.container\x20{\x20max-width:\x2095%;\x20}\x20}\x0a\x09\x20\x20\x20\x20@media\x20(min-width:\x20480px)\x20{\x20.container\x20{\x20max-width:\x2090%;\x20}\x20}\x0a\x09\x20\x20\x20\x20@media\x20(min-width:\x20640px)\x20{\x20.container\x20{\x20max-width:\x20600px;\x20}\x20}\x0a\x09\x20\x20\x20\x20@media\x20(min-width:\x20768px)\x20{\x20.container\x20{\x20max-width:\x20720px;\x20}\x20}\x0a\x09\x20\x20\x20\x20@media\x20(min-width:\x201024px)\x20{\x20.container\x20{\x20max-width:\x20800px;\x20}\x20}\x0a\x09\x20\x20</style>\x0a\x20\x20</head>\x0a\x0a\x20\x20<body\x20data-proxy-ip=\x22{{PROXY_IP}}\x22>\x0a\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20<div\x20class=\x22header\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<h1>VLESS\x20Proxy\x20Configuration</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<p>Copy\x20the\x20configuration\x20or\x20import\x20directly\x20into\x20your\x20client</p>\x0a\x20\x20\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-card\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-title\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span>Network\x20Information</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20id=\x22refresh-ip-info\x22\x20class=\x22refresh-btn\x22\x20aria-label=\x22Refresh\x20IP\x20information\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20class=\x22refresh-icon\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20viewBox=\x220\x200\x2024\x2024\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fill=\x22none\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke=\x22currentColor\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-width=\x222\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linecap=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linejoin=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20d=\x22M21.5\x202v6h-6M2.5\x2022v-6h6M2\x2011.5a10\x2010\x200\x200\x201\x2018.8-4.3M22\x2012.5a10\x2010\x200\x200\x201-18.8\x204.2\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</svg>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Refresh\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-section\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-header\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20viewBox=\x220\x200\x2024\x2024\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fill=\x22none\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke=\x22currentColor\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-width=\x222\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linecap=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linejoin=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20d=\x22M15.5\x202H8.6c-.4\x200-.8.2-1.1.5-.3.3-.5.7-.5\x201.1v16.8c0\x20.4.2.8.5\x201.1.3.3.7.5\x201.1.5h6.9c.4\x200\x20.8-.2\x201.1-.5.3-.3.5-.7.5-1.1V3.6c0-.4-.2-.8-.5-1.1-.3-.3-.7-.5-1.1-.5z\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<circle\x20cx=\x2212\x22\x20cy=\x2218\x22\x20r=\x221\x22\x20/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</svg>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Proxy\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-content\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>Proxy\x20Host</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22proxy-host\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><span\x20class=\x22skeleton\x22\x20style=\x22width:\x20150px\x22></span\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>IP\x20Address</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22proxy-ip\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><span\x20class=\x22skeleton\x22\x20style=\x22width:\x20120px\x22></span\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>Location</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22proxy-location\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><span\x20class=\x22skeleton\x22\x20style=\x22width:\x20100px\x22></span\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>ISP\x20Provider</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22proxy-isp\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><span\x20class=\x22skeleton\x22\x20style=\x22width:\x20140px\x22></span\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-section\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-header\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20viewBox=\x220\x200\x2024\x2024\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fill=\x22none\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke=\x22currentColor\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-width=\x222\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linecap=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linejoin=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20d=\x22M20\x2016V7a2\x202\x200\x200\x200-2-2H6a2\x202\x200\x200\x200-2\x202v9m16\x200H4m16\x200\x201.28\x202.55a1\x201\x200\x200\x201-.9\x201.45H3.62a1\x201\x200\x200\x201-.9-1.45L4\x2016\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</svg>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Your\x20Connection</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-content\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>Your\x20IP</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22client-ip\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><span\x20class=\x22skeleton\x22\x20style=\x22width:\x20110px\x22></span\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>Location</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22client-location\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><span\x20class=\x22skeleton\x22\x20style=\x22width:\x2090px\x22></span\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>ISP\x20Provider</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22client-isp\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><span\x20class=\x22skeleton\x22\x20style=\x22width:\x20130px\x22></span\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22ip-info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22label\x22>Risk\x20Score</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22value\x22\x20id=\x22client-proxy\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22skeleton\x22\x20style=\x22width:\x20100px\x22></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-card\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-title\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span>Xray\x20Core\x20Clients</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22button\x20copy-buttons\x22\x20onclick=\x22copyToClipboard(this,\x20\x27{{DREAM_CONFIG}}\x27)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20class=\x22copy-icon\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20width=\x2212\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20height=\x2212\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20viewBox=\x220\x200\x2024\x2024\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fill=\x22none\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke=\x22currentColor\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-width=\x222\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linecap=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linejoin=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<rect\x20x=\x229\x22\x20y=\x229\x22\x20width=\x2213\x22\x20height=\x2213\x22\x20rx=\x222\x22\x20ry=\x222\x22></rect>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x20d=\x22M5\x2015H4a2\x202\x200\x200\x201-2-2V4a2\x202\x200\x200\x201\x202-2h9a2\x202\x200\x200\x201\x202\x202v1\x22></path>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</svg>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Copy\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-content\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<pre\x20id=\x22xray-config\x22>{{DREAM_CONFIG}}</pre>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22client-buttons\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20href=\x22hiddify://install-config?url={{SUB_URL_ENCODED}}\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20class=\x22button\x20client-btn\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22client-icon\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><svg\x20viewBox=\x220\x200\x2024\x2024\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x20d=\x22M12\x202L2\x207l10\x205\x2010-5-10-5zM2\x2017l10\x205\x2010-5M2\x2012l10\x205\x2010-5\x22\x20/></svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22button-text\x22>Import\x20to\x20Hiddify</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22v2rayng://install-config?url={{SUB_URL_ENCODED}}\x22\x20class=\x22button\x20client-btn\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22client-icon\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><svg\x20viewBox=\x220\x200\x2024\x2024\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x20d=\x22M12\x202L4\x205v6c0\x205.5\x203.5\x2010.7\x208\x2012.3\x204.5-1.6\x208-6.8\x208-12.3V5l-8-3z\x22\x20/></svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22button-text\x22>Import\x20to\x20V2rayNG</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-card\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-title\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span>Sing-Box\x20Core\x20Clients</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22button\x20copy-buttons\x22\x20onclick=\x22copyToClipboard(this,\x20\x27{{FREEDOM_CONFIG}}\x27)\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20class=\x22copy-icon\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20width=\x2212\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20height=\x2212\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20viewBox=\x220\x200\x2024\x2024\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fill=\x22none\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke=\x22currentColor\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-width=\x222\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linecap=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20stroke-linejoin=\x22round\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<rect\x20x=\x229\x22\x20y=\x229\x22\x20width=\x2213\x22\x20height=\x2213\x22\x20rx=\x222\x22\x20ry=\x222\x22></rect>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x20d=\x22M5\x2015H4a2\x202\x200\x200\x201-2-2V4a2\x202\x200\x200\x201\x202-2h9a2\x202\x200\x200\x201\x202\x202v1\x22></path>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</svg>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Copy\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22config-content\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<pre\x20id=\x22singbox-config\x22>{{FREEDOM_CONFIG}}</pre>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22client-buttons\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22{{CLASH_META_URL}}\x22\x20class=\x22button\x20client-btn\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22client-icon\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><svg\x20viewBox=\x220\x200\x2024\x2024\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20d=\x22M12\x202C6.48\x202\x202\x206.48\x202\x2012s4.48\x2010\x2010\x2010\x2010-4.48\x2010-10S17.52\x202\x2012\x202zm-1\x2017.93c-3.95-.49-7-3.85-7-7.93\x200-.62.08-1.21.21-1.79L9\x2015v1c0\x201.1.9\x202\x202\x202v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55\x200\x201-.45\x201-1V7h2c1.1\x200\x202-.9\x202-2v-.41c2.93\x201.19\x205\x204.06\x205\x207.41\x200\x202.08-.8\x203.97-2.1\x205.39z\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20/></svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22button-text\x22>Import\x20to\x20Clash\x20Meta</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22sn://subscription?url={{SUB_URL_ENCODED}}\x22\x20class=\x22button\x20client-btn\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22client-icon\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20><svg\x20viewBox=\x220\x200\x2024\x2024\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20d=\x22M20,8h-3V6c0-1.1-0.9-2-2-2H9C7.9,4,7,4.9,7,6v2H4C2.9,8,2,8.9,2,10v9c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2v-9\x20C22,8.9,21.1,8,20,8z\x20M9,6h6v2H9V6z\x20M20,19H4v-2h16V19z\x20M20,15H4v-5h3v1c0,0.55,0.45,1,1,1h1.5c0.28,0,0.5-0.22,0.5-0.5v-0.5h4v0.5\x20c0,0.28,0.22,0.5,0.5,0.5H16c0.55,0,1-0.45,1-1v-1h3V15z\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<circle\x20cx=\x228.5\x22\x20cy=\x2213.5\x22\x20r=\x221\x22\x20/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<circle\x20cx=\x2215.5\x22\x20cy=\x2213.5\x22\x20r=\x221\x22\x20/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x20d=\x22M12,15.5c-0.55,0-1-0.45-1-1h2C13,15.05,12.55,15.5,12,15.5z\x22\x20/></svg\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20></span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<span\x20class=\x22button-text\x22>Import\x20to\x20NekoBox</span>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<p>Â©\x20<span\x20id=\x22current-year\x22>{{YEAR}}</span>\x20REvil\x20-\x20All\x20Rights\x20Reserved</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<p>Secure.\x20Private.\x20Fast.</p>\x0a\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20</div>\x0a\x0a\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20function\x20copyToClipboard(button,\x20text)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20originalHTML\x20=\x20button.innerHTML;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20navigator.clipboard.writeText(text).then(()\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.innerHTML\x20=\x20`\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<svg\x20class=\x22copy-icon\x22\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x20width=\x2212\x22\x20height=\x2212\x22\x20viewBox=\x220\x200\x2024\x2024\x22\x20fill=\x22none\x22\x20stroke=\x22currentColor\x22\x20stroke-width=\x222\x22\x20stroke-linecap=\x22round\x22\x20stroke-linejoin=\x22round\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<rect\x20x=\x229\x22\x20y=\x229\x22\x20width=\x2213\x22\x20height=\x2213\x22\x20rx=\x222\x22\x20ry=\x222\x22></rect>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x20d=\x22M5\x2015H4a2\x202\x200\x200\x201-2-2V4a2\x202\x200\x200\x201\x202-2h9a2\x202\x200\x200\x201\x202\x202v1\x22></path>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</svg>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Copied!\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.classList.add(\x22copied\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.disabled\x20=\x20true;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setTimeout(()\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.innerHTML\x20=\x20originalHTML;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.classList.remove(\x22copied\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.disabled\x20=\x20false;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20},\x201200);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}).catch(err\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.error(\x22Failed\x20to\x20copy\x20text:\x20\x22,\x20err);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20originalHTMLError\x20=\x20button.innerHTML;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.innerHTML\x20=\x20`\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<svg\x20class=\x22copy-icon\x22\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x20width=\x2212\x22\x20height=\x2212\x22\x20viewBox=\x220\x200\x2024\x2024\x22\x20fill=\x22none\x22\x20stroke=\x22currentColor\x22\x20stroke-width=\x222\x22\x20stroke-linecap=\x22round\x22\x20stroke-linejoin=\x22round\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<rect\x20x=\x229\x22\x20y=\x229\x22\x20width=\x2213\x22\x20height=\x2213\x22\x20rx=\x222\x22\x20ry=\x222\x22></rect>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<path\x20d=\x22M5\x2015H4a2\x202\x200\x200\x201-2-2V4a2\x202\x200\x200\x201\x202-2h9a2\x202\x200\x200\x201\x202\x202v1\x22></path>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</svg>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Error\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.classList.add(\x22error\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.disabled\x20=\x20true;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setTimeout(()\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.innerHTML\x20=\x20originalHTMLError;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.classList.remove(\x22error\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.disabled\x20=\x20false;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20},\x201500);\x0a\x20\x20\x20\x20\x20\x20\x20\x20});\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20/**\x0a\x20\x20\x20\x20\x20\x20\x20*\x20Fetches\x20the\x20client\x27s\x20public\x20IP\x20address.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@returns\x20{Promise<string|null>}\x20IP\x20address\x20string\x20or\x20null\x20on\x20error.\x0a\x20\x20\x20\x20\x20\x20\x20*/\x0a\x20\x20\x20\x20\x20\x20async\x20function\x20fetchClientPublicIP()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20try\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20response\x20=\x20await\x20fetch(\x27https://api.ipify.org?format=json\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(!response.ok)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20throw\x20new\x20Error(`HTTP\x20error!\x20status:\x20${response.status}`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20data\x20=\x20await\x20response.json();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20data.ip;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20catch\x20(error)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.error(\x27Error\x20fetching\x20client\x20IP:\x27,\x20error);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20null;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20/**\x0a\x20\x20\x20\x20\x20\x20\x20*\x20Fetches\x20client\x20IP\x20information\x20from\x20Scamalytics\x20via\x20the\x20Cloudflare\x20Worker.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{string}\x20clientIp\x20-\x20The\x20client\x27s\x20IP\x20address.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@returns\x20{Promise<object|null>}\x20IP\x20data\x20or\x20null\x20on\x20error.\x0a\x20\x20\x20\x20\x20\x20\x20*/\x0a\x20\x20\x20\x20\x20\x20async\x20function\x20fetchScamalyticsClientInfo(clientIp)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(!clientIp)\x20return\x20null;\x0a\x20\x20\x20\x20\x20\x20\x20\x20try\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20workerLookupUrl\x20=\x20`/scamalytics-lookup?ip=${encodeURIComponent(clientIp)}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20response\x20=\x20await\x20fetch(workerLookupUrl);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(!response.ok)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20errorDetail\x20=\x20`Worker\x20request\x20failed!\x20status:\x20${response.status}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20try\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20errorData\x20=\x20await\x20response.json();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(errorData\x20&&\x20errorData.error)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20errorDetail\x20=\x20errorData.error;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(errorData.details)\x20errorDetail\x20+=\x20`\x20Details:\x20${errorData.details}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(errorData\x20&&\x20errorData.scamalytics\x20&&\x20errorData.scamalytics.error)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20errorDetail\x20=\x20errorData.scamalytics.error;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(response.statusText)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20errorDetail\x20+=\x20`\x20-\x20${response.statusText}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20catch\x20(e)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20errorDetail\x20+=\x20`\x20-\x20${await\x20response.text()}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20throw\x20new\x20Error(errorDetail);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20data\x20=\x20await\x20response.json();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(data.scamalytics\x20&&\x20data.scamalytics.status\x20===\x20\x27error\x27)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20throw\x20new\x20Error(data.scamalytics.error\x20||\x20\x27Scamalytics\x20API\x20error\x20via\x20Worker\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(data.error\x20&&\x20!data.scamalytics)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20throw\x20new\x20Error(data.error);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20data;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20catch\x20(error)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.error(\x27Error\x20fetching\x20from\x20Scamalytics\x20via\x20Worker:\x27,\x20error);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20null;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20/**\x0a\x20\x20\x20\x20\x20\x20\x20*\x20Updates\x20the\x20display\x20for\x20client\x20IP\x20information\x20using\x20data\x20from\x20Scamalytics.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{object|null}\x20data\x20-\x20IP\x20data\x20from\x20Scamalytics.\x0a\x20\x20\x20\x20\x20\x20\x20*/\x0a\x20\x20\x20\x20\x20\x20function\x20updateScamalyticsClientDisplay(data)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20prefix\x20=\x20\x27client\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Check\x20for\x20a\x20successful\x20Scamalytics\x20response\x20structure\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(!data\x20||\x20!data.scamalytics\x20||\x20data.scamalytics.status\x20!==\x20\x27ok\x27)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(prefix,\x20(data\x20&&\x20data.scamalytics\x20&&\x20data.scamalytics.error)\x20||\x20\x27Could\x20not\x20load\x20client\x20data\x20from\x20Scamalytics\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20sa\x20=\x20data.scamalytics;\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20dbip\x20=\x20data.external_datasources?.dbip;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20elements\x20=\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ip:\x20document.getElementById(`${prefix}-ip`),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location:\x20document.getElementById(`${prefix}-location`),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20isp:\x20document.getElementById(`${prefix}-isp`),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20proxy:\x20document.getElementById(`${prefix}-proxy`)\x0a\x20\x20\x20\x20\x20\x20\x20\x20};\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(elements.ip)\x20elements.ip.textContent\x20=\x20sa.ip\x20||\x20\x22N/A\x22;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(elements.location)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20city\x20=\x20dbip?.ip_city\x20||\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20countryName\x20=\x20dbip?.ip_country_name\x20||\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20countryCode\x20=\x20dbip?.ip_country_code\x20?\x20dbip.ip_country_code.toLowerCase()\x20:\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20locationString\x20=\x20\x27N/A\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20flagElementHtml\x20=\x20\x27\x27;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(countryCode)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20flagElementHtml\x20=\x20`<img\x20src=\x22https://flagcdn.com/w20/${countryCode}.png\x22\x20srcset=\x22https://flagcdn.com/w40/${countryCode}.png\x202x\x22\x20alt=\x22${dbip.ip_country_code\x20||\x20\x27flag\x27}\x22\x20class=\x22country-flag\x22>\x20`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20textPart\x20=\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(city\x20&&\x20countryName)\x20textPart\x20=\x20`${city},\x20${countryName}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(countryName)\x20textPart\x20=\x20countryName;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(city)\x20textPart\x20=\x20city;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(flagElementHtml.trim()\x20||\x20textPart.trim())\x20locationString\x20=\x20`${flagElementHtml}${textPart}`.trim();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20elements.location.innerHTML\x20=\x20locationString\x20||\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(elements.isp)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20elements.isp.textContent\x20=\x20sa.scamalytics_isp\x20||\x20dbip?.isp_name\x20||\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(elements.proxy)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20score\x20=\x20sa.scamalytics_score;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20risk\x20=\x20sa.scamalytics_risk;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20riskText\x20=\x20\x22Unknown\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20badgeClass\x20=\x20\x22badge-neutral\x22;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(risk\x20!==\x20undefined\x20&&\x20score\x20!==\x20undefined\x20&&\x20risk\x20!==\x20null\x20&&\x20score\x20!==\x20null)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20riskText\x20=\x20`${score}\x20-\x20${risk.charAt(0).toUpperCase()\x20+\x20risk.slice(1)}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20switch\x20(risk.toLowerCase())\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20case\x20\x22low\x22:\x20badgeClass\x20=\x20\x22badge-yes\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20case\x20\x22medium\x22:\x20badgeClass\x20=\x20\x22badge-warning\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20case\x20\x22high\x22:\x20badgeClass\x20=\x20\x22badge-no\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20case\x20\x22very\x20high\x22:\x20badgeClass\x20=\x20\x22badge-no\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20default:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20badgeClass\x20=\x20\x22badge-neutral\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20riskText\x20=\x20`Score\x20${score}\x20-\x20${risk\x20||\x20\x27Status\x20Unknown\x27}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(score\x20!==\x20undefined\x20&&\x20score\x20!==\x20null)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20riskText\x20=\x20`Score\x20${score}\x20-\x20N/A`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(risk)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20riskText\x20=\x20risk.charAt(0).toUpperCase()\x20+\x20risk.slice(1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20switch\x20(risk.toLowerCase())\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20case\x20\x22low\x22:\x20badgeClass\x20=\x20\x22badge-yes\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20case\x20\x22medium\x22:\x20badgeClass\x20=\x20\x22badge-warning\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20case\x20\x22high\x22:\x20case\x20\x22very\x20high\x22:\x20badgeClass\x20=\x20\x22badge-no\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20default:\x20badgeClass\x20=\x20\x22badge-neutral\x22;\x20riskText=\x22Status\x20Unknown\x22;\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20elements.proxy.innerHTML\x20=\x20`<span\x20class=\x22badge\x20${badgeClass}\x22>${riskText}</span>`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20/**\x0a\x20\x20\x20\x20\x20\x20\x20*\x20Updates\x20the\x20display\x20for\x20Proxy\x20Server\x20IP\x20information\x20using\x20data\x20from\x20ip-api.io\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{object\x20|\x20null}\x20geo\x20-\x20IP\x20data\x20from\x20ip-api.io.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{string}\x20prefix\x20-\x20\x27proxy\x27.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{string\x20|\x20null}\x20originalHost\x20-\x20The\x20original\x20hostname\x20or\x20IP\x20of\x20the\x20proxy.\x0a\x20\x20\x20\x20\x20\x20\x20*/\x0a\x20\x20\x20\x20\x20\x20function\x20updateIpApiIoDisplay(geo,\x20prefix,\x20originalHost)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20hostElement\x20=\x20document.getElementById(`${prefix}-host`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(hostElement)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20hostElement.textContent\x20=\x20originalHost\x20||\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20ipElement\x20=\x20document.getElementById(`${prefix}-ip`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20locationElement\x20=\x20document.getElementById(`${prefix}-location`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20ispElement\x20=\x20document.getElementById(`${prefix}-isp`);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(!geo)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ipElement)\x20ipElement.textContent\x20=\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(locationElement)\x20locationElement.innerHTML\x20=\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ispElement)\x20ispElement.textContent\x20=\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ipElement)\x20ipElement.textContent\x20=\x20geo.ip\x20||\x20\x22N/A\x22;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(locationElement)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20city\x20=\x20geo.city\x20||\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20countryName\x20=\x20geo.country_name\x20||\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20countryCode\x20=\x20geo.country_code\x20?\x20geo.country_code.toLowerCase()\x20:\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20flagElementHtml\x20=\x20\x27\x27;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(countryCode)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20flagElementHtml\x20=\x20`<img\x20src=\x22https://flagcdn.com/w20/${countryCode}.png\x22\x20srcset=\x22https://flagcdn.com/w40/${countryCode}.png\x202x\x22\x20alt=\x22${geo.country_code\x20||\x20\x27flag\x27}\x22\x20class=\x22country-flag\x22>\x20`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(geo.country_flag)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20flagElementHtml\x20=\x20`${geo.country_flag}\x20`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20textPart\x20=\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(city\x20&&\x20countryName)\x20textPart\x20=\x20`${city},\x20${countryName}`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(countryName)\x20textPart\x20=\x20countryName;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(city)\x20textPart\x20=\x20city;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20locationText\x20=\x20\x27N/A\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(flagElementHtml.trim()\x20||\x20textPart.trim())\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20locationText\x20=\x20`${flagElementHtml}${textPart}`.trim();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20locationElement.innerHTML\x20=\x20locationText\x20||\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ispElement)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ispElement.textContent\x20=\x20geo.isp\x20||\x20geo.organisation\x20||\x20geo.as_name\x20||\x20geo.as\x20||\x20\x27N/A\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20/**\x0a\x20\x20\x20\x20\x20\x20\x20*\x20Fetches\x20IP\x20information\x20from\x20ip-api.io\x20(for\x20proxy\x20server\x20info)\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{string}\x20ip\x20-\x20IP\x20address\x20to\x20lookup.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@returns\x20{Promise<object|null>}\x20IP\x20data\x20or\x20null\x20on\x20error.\x0a\x20\x20\x20\x20\x20\x20\x20*/\x0a\x20\x20\x20\x20\x20\x20async\x20function\x20fetchIpApiIoInfo(ip)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20try\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20response\x20=\x20await\x20fetch(`https://ip-api.io/json/${ip}`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(!response.ok)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20errorText\x20=\x20await\x20response.text();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20throw\x20new\x20Error(`HTTP\x20error!\x20status:\x20${response.status},\x20message:\x20${errorText}`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20await\x20response.json();\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20catch\x20(error)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.error(\x27IP\x20API\x20Error\x20(ip-api.io):\x27,\x20error);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20null;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20/**\x0a\x20\x20\x20\x20\x20\x20\x20*\x20Shows\x20error\x20messages\x20in\x20the\x20UI.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{string}\x20prefix\x20-\x20\x27client\x27\x20or\x20\x27proxy\x27.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{string}\x20message\x20-\x20Error\x20message\x20to\x20log.\x0a\x20\x20\x20\x20\x20\x20\x20*\x20@param\x20{string|null}\x20originalHostForProxy\x20-\x20Original\x20host\x20for\x20proxy\x20if\x20applicable.\x0a\x20\x20\x20\x20\x20\x20\x20*/\x0a\x20\x20\x20\x20\x20\x20function\x20showError(prefix,\x20message\x20=\x20\x22Could\x20not\x20load\x20data\x22,\x20originalHostForProxy\x20=\x20null)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20errorMessage\x20=\x20\x22N/A\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(prefix\x20===\x20\x27proxy\x27)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20hostElement\x20=\x20document.getElementById(\x27proxy-host\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20ipElement\x20=\x20document.getElementById(\x27proxy-ip\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20locationElement\x20=\x20document.getElementById(\x27proxy-location\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20ispElement\x20=\x20document.getElementById(\x27proxy-isp\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(hostElement)\x20hostElement.textContent\x20=\x20originalHostForProxy\x20||\x20errorMessage;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ipElement)\x20ipElement.textContent\x20=\x20errorMessage;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(locationElement)\x20locationElement.innerHTML\x20=\x20errorMessage;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ispElement)\x20ispElement.textContent\x20=\x20errorMessage;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(prefix\x20===\x20\x27client\x27)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20ipElement\x20=\x20document.getElementById(\x27client-ip\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20locationElement\x20=\x20document.getElementById(\x27client-location\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20ispElement\x20=\x20document.getElementById(\x27client-isp\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20riskScoreElement\x20=\x20document.getElementById(\x27client-proxy\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ipElement)\x20ipElement.textContent\x20=\x20errorMessage;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(locationElement)\x20locationElement.innerHTML\x20=\x20errorMessage;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ispElement)\x20ispElement.textContent\x20=\x20errorMessage;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(riskScoreElement)\x20riskScoreElement.innerHTML\x20=\x20`<span\x20class=\x22badge\x20badge-neutral\x22>N/A</span>`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20console.warn(`${prefix}\x20data\x20loading\x20failed:\x20${message}`);\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20/**\x0a\x20\x20\x20\x20\x20\x20\x20*\x20Loads\x20all\x20network\x20information.\x0a\x20\x20\x20\x20\x20\x20\x20*/\x0a\x20\x20\x20\x20\x20\x20async\x20function\x20loadNetworkInfo()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20try\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20---\x20Load\x20Proxy\x20Server\x20Info\x20(ip-api.io)\x20---\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20proxyDomainOrIp\x20=\x20document.body.getAttribute(\x27data-proxy-ip\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20resolvedProxyIp\x20=\x20proxyDomainOrIp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20proxyHostVal\x20=\x20(proxyDomainOrIp\x20&&\x20proxyDomainOrIp\x20!==\x20\x22N/A\x22\x20&&\x20proxyDomainOrIp.toLowerCase()\x20!==\x20\x22null\x22\x20&&\x20proxyDomainOrIp.trim()\x20!==\x20\x22\x22)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20?\x20proxyDomainOrIp\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20:\x20\x22N/A\x22;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20proxyHostEl\x20=\x20document.getElementById(\x27proxy-host\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(proxyHostEl)\x20proxyHostEl.textContent\x20=\x20proxyHostVal;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(proxyHostVal\x20!==\x20\x22N/A\x22)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(!/^\x5cd{1,3}\x5c.\x5cd{1,3}\x5c.\x5cd{1,3}\x5c.\x5cd{1,3}$/.test(proxyDomainOrIp))\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20try\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20dnsRes\x20=\x20await\x20fetch(`https://dns.google/resolve?name=${encodeURIComponent(proxyDomainOrIp)}&type=A`);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(dnsRes.ok)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20dnsData\x20=\x20await\x20dnsRes.json();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(dnsData.Answer\x20&&\x20dnsData.Answer.length\x20>\x200)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20ipAnswer\x20=\x20dnsData.Answer.find(a\x20=>\x20a.type\x20===\x201);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(ipAnswer)\x20resolvedProxyIp\x20=\x20ipAnswer.data;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20console.warn(\x27No\x20A\x20record\x20for\x20proxy\x20domain:\x27,\x20proxyDomainOrIp);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20console.warn(\x27DNS\x20lookup\x20no\x20answers\x20for\x20proxy\x20domain:\x27,\x20proxyDomainOrIp);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.error(`DNS\x20lookup\x20failed\x20for\x20${proxyDomainOrIp}:\x20${dnsRes.status}`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20resolvedProxyIp\x20=\x20proxyDomainOrIp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20catch\x20(e)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.error(\x27DNS\x20resolution\x20for\x20proxy\x20failed:\x27,\x20e);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20resolvedProxyIp\x20=\x20proxyDomainOrIp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20proxyGeoData\x20=\x20await\x20fetchIpApiIoInfo(resolvedProxyIp);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(proxyGeoData\x20&&\x20(proxyGeoData.ip\x20||\x20proxyGeoData.country_code))\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20updateIpApiIoDisplay(proxyGeoData,\x20\x27proxy\x27,\x20proxyHostVal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(\x27proxy\x27,\x20`Could\x20not\x20load\x20proxy\x20geo\x20data\x20for\x20${resolvedProxyIp}.`,\x20proxyHostVal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(\x27proxy\x27,\x20\x27Proxy\x20Host\x20not\x20available\x27,\x20proxyHostVal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20Load\x20Client\x20Info\x20(Scamalytics\x20via\x20Worker)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.log(\x27Fetching\x20client\x20public\x20IP...\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20clientIp\x20=\x20await\x20fetchClientPublicIP();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(clientIp)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20clientIpElement\x20=\x20document.getElementById(\x27client-ip\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(clientIpElement)\x20clientIpElement.textContent\x20=\x20clientIp;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.log(\x27Loading\x20client\x20info\x20from\x20Scamalytics\x20(via\x20Worker)\x20for\x20IP:\x27,\x20clientIp);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20scamalyticsData\x20=\x20await\x20fetchScamalyticsClientInfo(clientIp);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(scamalyticsData)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20updateScamalyticsClientDisplay(scamalyticsData);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20showError\x20would\x20have\x20been\x20called\x20in\x20fetchScamalyticsClientInfo\x20on\x20fetch\x20failure\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20//\x20or\x20if\x20response.ok\x20was\x20false.\x20If\x20it\x27s\x20null\x20due\x20to\x20other\x20reasons,\x20call\x20showError.\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(clientIpElement\x20&&\x20clientIpElement.textContent\x20===\x20clientIp)\x20{\x20//\x20only\x20if\x20not\x20already\x20N/A\x27d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(\x27client\x27,\x20\x27Failed\x20to\x20get\x20full\x20details\x20from\x20Scamalytics.\x20IP\x20may\x20be\x20correct.\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20if\x20(!clientIpElement\x20||\x20clientIpElement.textContent.includes(\x27skeleton\x27))\x20{\x20//\x20if\x20still\x20skeleton\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(\x27client\x27,\x20\x27Failed\x20to\x20get\x20details\x20from\x20Scamalytics.\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(\x27client\x27,\x20\x27Could\x20not\x20determine\x20your\x20IP\x20address.\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20catch\x20(error)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20console.error(\x27Overall\x20network\x20info\x20loading\x20failed:\x27,\x20error);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(\x27proxy\x27,\x20`Error:\x20${error.message}`,\x20document.body.getAttribute(\x27data-proxy-ip\x27)\x20||\x20\x22N/A\x22);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20showError(\x27client\x27,\x20`Error:\x20${error.message}`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20//\x20Refresh\x20button\x20functionality\x0a\x20\x20\x20\x20\x20\x20document.getElementById(\x27refresh-ip-info\x27)?.addEventListener(\x27click\x27,\x20function()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20button\x20=\x20this;\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20icon\x20=\x20button.querySelector(\x27.refresh-icon\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20button.disabled\x20=\x20true;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(icon)\x20icon.style.animation\x20=\x20\x27spin\x201s\x20linear\x20infinite\x27;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20resetToSkeleton\x20=\x20(prefix)\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20elementsToReset\x20=\x20[\x27ip\x27,\x20\x27location\x27,\x20\x27isp\x27];\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(prefix\x20===\x20\x27proxy\x27)\x20elementsToReset.push(\x27host\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(prefix\x20===\x20\x27client\x27)\x20elementsToReset.push(\x27proxy\x27);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20elementsToReset.forEach(elemKey\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20const\x20element\x20=\x20document.getElementById(`${prefix}-${elemKey}`);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(element)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20let\x20skeletonWidth\x20=\x20\x22100px\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20(elemKey\x20===\x20\x27isp\x27)\x20skeletonWidth\x20=\x20\x22130px\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(elemKey\x20===\x20\x27location\x27)\x20skeletonWidth\x20=\x20\x22110px\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(elemKey\x20===\x20\x27ip\x27)\x20skeletonWidth\x20=\x20\x22120px\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(elemKey\x20===\x20\x27host\x27\x20&&\x20prefix\x20===\x20\x27proxy\x27)\x20skeletonWidth\x20=\x20\x22150px\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(elemKey\x20===\x20\x27proxy\x27\x20&&\x20prefix\x20===\x20\x27client\x27)\x20skeletonWidth\x20=\x20\x22100px\x22;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20element.innerHTML\x20=\x20`<span\x20class=\x22skeleton\x22\x20style=\x22width:\x20${skeletonWidth};\x22></span>`;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20});\x0a\x20\x20\x20\x20\x20\x20\x20\x20};\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20resetToSkeleton(\x27proxy\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20resetToSkeleton(\x27client\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20loadNetworkInfo().finally(()\x20=>\x20setTimeout(()\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20button.disabled\x20=\x20false;\x20if\x20(icon)\x20icon.style.animation\x20=\x20\x27\x27;\x0a\x20\x20\x20\x20\x20\x20\x20\x20},\x201000));\x0a\x20\x20\x20\x20\x20\x20});\x0a\x0a\x20\x20\x20\x20\x20\x20const\x20style\x20=\x20document.createElement(\x27style\x27);\x0a\x20\x20\x20\x20\x20\x20style.textContent\x20=\x20`@keyframes\x20spin\x20{\x20from\x20{\x20transform:\x20rotate(0deg);\x20}\x20to\x20{\x20transform:\x20rotate(360deg);\x20}\x20}`;\x0a\x20\x20\x20\x20\x20\x20document.head.appendChild(style);\x0a\x0a\x20\x20\x20\x20\x20\x20document.addEventListener(\x27DOMContentLoaded\x27,\x20()\x20=>\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20console.log(\x27Page\x20loaded,\x20initializing\x20network\x20info...\x27);\x0a\x20\x20\x20\x20\x20\x20\x20\x20loadNetworkInfo();\x0a\x20\x20\x20\x20\x20\x20});\x0a\x20\x20\x20\x20</script>\x0a\x20\x20</body>\x0a</html>\x0a\x09';
    return i = i['replace'](/{{PROXY_IP}}/g, c)['replace'](/{{DREAM_CONFIG}}/g, d)['replace'](/{{FREEDOM_CONFIG}}/g, e)['replace'](/{{CLASH_META_URL}}/g, h)['replace'](/{{SUB_URL_ENCODED}}/g, g)['replace'](/{{YEAR}}/g, new Date()['getFullYear']()['toString']()), i;
}
async function ProtocolOverWSHandler(a, b = null) {
    !b && (b = {
        'userID': userID,
        'socks5Address': socks5Address,
        'socks5Relay': socks5Relay,
        'proxyIP': proxyIP,
        'proxyPort': proxyPort,
        'enableSocks': enableSocks,
        'parsedSocks5Address': parsedSocks5Address
    });
    const c = new WebSocketPair(), [d, e] = Object['values'](c);
    e['accept']();
    let f = '', g = '';
    const h = (n, o) => {
            console['log']('[' + f + ':' + g + ']\x20' + n, o || '');
        }, i = a['headers']['get']('Sec-WebSocket-Protocol') || '', j = MakeReadableWebSocketStream(e, i, h);
    let l = { 'value': null }, m = ![];
    return j['pipeTo'](new WritableStream({
        async 'write'(n, o) {
            if (m)
                return await handleDNSQuery(n, e, null, h);
            if (l['value']) {
                const w = l['value']['writable']['getWriter']();
                await w['write'](n), w['releaseLock']();
                return;
            }
            const {
                hasError: p,
                message: q,
                addressType: r,
                portRemote: portRemote = 0x1bb,
                addressRemote: addressRemote = '',
                rawDataIndex: s,
                ProtocolVersion: ProtocolVersion = new Uint8Array([
                    0x0,
                    0x0
                ]),
                isUDP: t
            } = ProcessProtocolHeader(n, b['userID']);
            f = addressRemote, g = portRemote + '--' + Math['random']() + '\x20' + (t ? 'udp\x20' : 'tcp\x20') + '\x20';
            if (p)
                throw new Error(q);
            if (t) {
                if (portRemote === 0x35)
                    m = !![];
                else
                    throw new Error('UDP\x20proxy\x20is\x20only\x20enabled\x20for\x20DNS\x20(port\x2053)');
                return;
            }
            const u = new Uint8Array([
                    ProtocolVersion[0x0],
                    0x0
                ]), v = n['slice'](s);
            if (m)
                return handleDNSQuery(v, e, u, h);
            HandleTCPOutBound(l, r, addressRemote, portRemote, v, e, u, h, b);
        },
        'close'() {
            h('readableWebSocketStream\x20is\x20close');
        },
        'abort'(n) {
            h('readableWebSocketStream\x20is\x20abort', JSON['stringify'](n));
        }
    }))['catch'](n => {
        h('readableWebSocketStream\x20pipeTo\x20error', n);
    }), new Response(null, {
        'status': 0x65,
        'webSocket': d
    });
}
async function HandleTCPOutBound(a, b, c, d, e, f, g, h, i = null) {
    !i && (i = {
        'userID': userID,
        'socks5Address': socks5Address,
        'socks5Relay': socks5Relay,
        'proxyIP': proxyIP,
        'proxyPort': proxyPort,
        'enableSocks': enableSocks,
        'parsedSocks5Address': parsedSocks5Address
    });
    async function j(n, o, p = ![]) {
        let q;
        i['socks5Relay'] ? q = await socks5Connect(b, n, o, h, i['parsedSocks5Address']) : q = p ? await socks5Connect(b, n, o, h, i['parsedSocks5Address']) : connect({
            'hostname': n,
            'port': o
        });
        a['value'] = q, h('connected\x20to\x20' + n + ':' + o);
        const r = q['writable']['getWriter']();
        return await r['write'](e), r['releaseLock'](), q;
    }
    async function l() {
        let n;
        i['enableSocks'] ? n = await j(c, d, !![]) : n = await j(i['proxyIP'] || c, i['proxyPort'] || d, ![]), n['closed']['catch'](o => {
            console['log']('retry\x20tcpSocket\x20closed\x20error', o);
        })['finally'](() => {
            safeCloseWebSocket(f);
        }), RemoteSocketToWS(n, f, g, null, h);
    }
    let m = await j(c, d);
    RemoteSocketToWS(m, f, g, l, h);
}
function MakeReadableWebSocketStream(a, b, c) {
    let d = ![];
    const e = new ReadableStream({
        'start'(f) {
            a['addEventListener']('message', i => {
                const j = i['data'];
                f['enqueue'](j);
            }), a['addEventListener']('close', () => {
                safeCloseWebSocket(a), f['close']();
            }), a['addEventListener']('error', i => {
                c('webSocketServer\x20has\x20error'), f['error'](i);
            });
            const {
                earlyData: g,
                error: h
            } = base64ToArrayBuffer(b);
            if (h)
                f['error'](h);
            else
                g && f['enqueue'](g);
        },
        'pull'(f) {
        },
        'cancel'(f) {
            c('ReadableStream\x20was\x20canceled,\x20due\x20to\x20' + f), d = !![], safeCloseWebSocket(a);
        }
    });
    return e;
}
function ProcessProtocolHeader(a, b) {
    if (a['byteLength'] < 0x18)
        return {
            'hasError': !![],
            'message': 'invalid\x20data'
        };
    const c = new DataView(a), d = c['getUint8'](0x0), e = stringify(new Uint8Array(a['slice'](0x1, 0x11))), f = b['includes'](',') ? b['split'](',') : [b], g = f['some'](q => e === q['trim']()) || f['length'] === 0x1 && e === f[0x0]['trim']();
    console['log']('userID:\x20' + e);
    if (!g)
        return {
            'hasError': !![],
            'message': 'invalid\x20user'
        };
    const h = c['getUint8'](0x11), i = c['getUint8'](0x12 + h);
    if (i !== 0x1 && i !== 0x2)
        return {
            'hasError': !![],
            'message': 'command\x20' + i + '\x20is\x20not\x20supported,\x20command\x2001-tcp,02-udp,03-mux'
        };
    const j = 0x12 + h + 0x1, l = c['getUint16'](j), m = c['getUint8'](j + 0x2);
    let n, o, p;
    switch (m) {
    case 0x1:
        o = 0x4, p = j + 0x3, n = new Uint8Array(a['slice'](p, p + o))['join']('.');
        break;
    case 0x2:
        o = c['getUint8'](j + 0x3), p = j + 0x4, n = new TextDecoder()['decode'](a['slice'](p, p + o));
        break;
    case 0x3:
        o = 0x10, p = j + 0x3, n = Array['from']({ 'length': 0x8 }, (q, r) => c['getUint16'](p + r * 0x2)['toString'](0x10))['join'](':');
        break;
    default:
        return {
            'hasError': !![],
            'message': 'invalid\x20addressType:\x20' + m
        };
    }
    if (!n)
        return {
            'hasError': !![],
            'message': 'addressValue\x20is\x20empty,\x20addressType\x20is\x20' + m
        };
    return {
        'hasError': ![],
        'addressRemote': n,
        'addressType': m,
        'portRemote': l,
        'rawDataIndex': p + o,
        'ProtocolVersion': new Uint8Array([d]),
        'isUDP': i === 0x2
    };
}
async function RemoteSocketToWS(a, b, c, d, e) {
    let f = ![];
    try {
        await a['readable']['pipeTo'](new WritableStream({
            async 'write'(g) {
                if (b['readyState'] !== WS_READY_STATE_OPEN)
                    throw new Error('WebSocket\x20is\x20not\x20open');
                f = !![], c ? (b['send'](await new Blob([
                    c,
                    g
                ])['arrayBuffer']()), c = null) : b['send'](g);
            },
            'close'() {
                e('Remote\x20connection\x20readable\x20closed.\x20Had\x20incoming\x20data:\x20' + f);
            },
            'abort'(g) {
                console['error']('Remote\x20connection\x20readable\x20aborted:', g);
            }
        }));
    } catch (g) {
        console['error']('RemoteSocketToWS\x20error:', g['stack'] || g), safeCloseWebSocket(b);
    }
    !f && d && (e('No\x20incoming\x20data,\x20retrying'), await d());
}
function base64ToArrayBuffer(a) {
    if (!a)
        return {
            'earlyData': null,
            'error': null
        };
    try {
        a = a['replace'](/-/g, '+')['replace'](/_/g, '/');
        const b = atob(a), c = new ArrayBuffer(b['length']), d = new Uint8Array(c);
        for (let e = 0x0; e < b['length']; e++) {
            d[e] = b['charCodeAt'](e);
        }
        return {
            'earlyData': c,
            'error': null
        };
    } catch (f) {
        return {
            'earlyData': null,
            'error': f
        };
    }
}
function isValidUUID(a) {
    const b = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
    return b['test'](a);
}
const WS_READY_STATE_OPEN = 0x1, WS_READY_STATE_CLOSING = 0x2;
function safeCloseWebSocket(a) {
    try {
        (a['readyState'] === WS_READY_STATE_OPEN || a['readyState'] === WS_READY_STATE_CLOSING) && a['close']();
    } catch (b) {
        console['error']('safeCloseWebSocket\x20error:', b);
    }
}
const byteToHex = Array['from']({ 'length': 0x100 }, (a, b) => (b + 0x100)['toString'](0x10)['slice'](0x1));
function unsafeStringify(a, b = 0x0) {
    return [
        byteToHex[a[b]],
        byteToHex[a[b + 0x1]],
        byteToHex[a[b + 0x2]],
        byteToHex[a[b + 0x3]],
        '-',
        byteToHex[a[b + 0x4]],
        byteToHex[a[b + 0x5]],
        '-',
        byteToHex[a[b + 0x6]],
        byteToHex[a[b + 0x7]],
        '-',
        byteToHex[a[b + 0x8]],
        byteToHex[a[b + 0x9]],
        '-',
        byteToHex[a[b + 0xa]],
        byteToHex[a[b + 0xb]],
        byteToHex[a[b + 0xc]],
        byteToHex[a[b + 0xd]],
        byteToHex[a[b + 0xe]],
        byteToHex[a[b + 0xf]]
    ]['join']('')['toLowerCase']();
}
function stringify(a, b = 0x0) {
    const c = unsafeStringify(a, b);
    if (!isValidUUID(c))
        throw new TypeError('Stringified\x20UUID\x20is\x20invalid');
    return c;
}
async function handleDNSQuery(a, b, c, d) {
    try {
        const e = '1.1.1.1', f = 0x35;
        let g = c;
        const h = connect({
            'hostname': e,
            'port': f
        });
        d('connected\x20to\x20' + e + ':' + f);
        const i = h['writable']['getWriter']();
        await i['write'](a), i['releaseLock'](), await h['readable']['pipeTo'](new WritableStream({
            async 'write'(j) {
                b['readyState'] === WS_READY_STATE_OPEN && (g ? (b['send'](await new Blob([
                    g,
                    j
                ])['arrayBuffer']()), g = null) : b['send'](j));
            },
            'close'() {
                d('dns\x20server(' + e + ')\x20tcp\x20is\x20close');
            },
            'abort'(j) {
                console['error']('dns\x20server(' + e + ')\x20tcp\x20is\x20abort', j);
            }
        }));
    } catch (j) {
        console['error']('handleDNSQuery\x20have\x20exception,\x20error:\x20' + j['message']);
    }
}
async function socks5Connect(a, b, c, d, e = null) {
    const {
            username: f,
            password: g,
            hostname: h,
            port: i
        } = e || parsedSocks5Address, j = connect({
            'hostname': h,
            'port': i
        }), l = new Uint8Array([
            0x5,
            0x2,
            0x0,
            0x2
        ]), m = j['writable']['getWriter']();
    await m['write'](l), d('sent\x20socks\x20greeting');
    const n = j['readable']['getReader'](), o = new TextEncoder();
    let p = (await n['read']())['value'];
    if (p[0x0] !== 0x5) {
        d('socks\x20server\x20version\x20error:\x20' + p[0x0] + '\x20expected:\x205');
        return;
    }
    if (p[0x1] === 0xff) {
        d('no\x20acceptable\x20methods');
        return;
    }
    if (p[0x1] === 0x2) {
        d('socks\x20server\x20needs\x20auth');
        if (!f || !g) {
            d('please\x20provide\x20username/password');
            return;
        }
        const s = new Uint8Array([
            0x1,
            f['length'],
            ...o['encode'](f),
            g['length'],
            ...o['encode'](g)
        ]);
        await m['write'](s), p = (await n['read']())['value'];
        if (p[0x0] !== 0x1 || p[0x1] !== 0x0) {
            d('fail\x20to\x20auth\x20socks\x20server');
            return;
        }
    }
    let q;
    switch (a) {
    case 0x1:
        q = new Uint8Array([
            0x1,
            ...b['split']('.')['map'](Number)
        ]);
        break;
    case 0x2:
        q = new Uint8Array([
            0x3,
            b['length'],
            ...o['encode'](b)
        ]);
        break;
    case 0x3:
        q = new Uint8Array([
            0x4,
            ...b['split'](':')['flatMap'](t => [
                parseInt(t['slice'](0x0, 0x2), 0x10),
                parseInt(t['slice'](0x2), 0x10)
            ])
        ]);
        break;
    default:
        d('invild\x20\x20addressType\x20is\x20' + a);
        return;
    }
    const r = new Uint8Array([
        0x5,
        0x1,
        0x0,
        ...q,
        c >> 0x8,
        c & 0xff
    ]);
    await m['write'](r), d('sent\x20socks\x20request'), p = (await n['read']())['value'];
    if (p[0x1] === 0x0)
        d('socks\x20connection\x20opened');
    else {
        d('fail\x20to\x20open\x20socks\x20connection');
        return;
    }
    return m['releaseLock'](), n['releaseLock'](), j;
}
function socks5AddressParser(a) {
    let [b, c] = a['split']('@')['reverse'](), d, e, f, g;
    if (c) {
        const j = c['split'](':');
        if (j['length'] !== 0x2)
            throw new Error('Invalid\x20SOCKS\x20address\x20format');
        [d, e] = j;
    }
    const h = b['split'](':');
    g = Number(h['pop']());
    if (isNaN(g))
        throw new Error('Invalid\x20SOCKS\x20address\x20format');
    f = h['join'](':');
    const i = /^```math.*```$/;
    if (f['includes'](':') && !i['test'](f))
        throw new Error('Invalid\x20SOCKS\x20address\x20format');
    return {
        'username': d,
        'password': e,
        'hostname': f,
        'port': g
    };
}
const at = 'QA==', pt = 'dmxlc3M=', ed = 'RUR0dW5uZWw=';
function GenSub(a, b) {
    const c = new Set([
            b,
            'creativecommons.org',
            'www.speedtest.net',
            'sky.rethinkdns.com',
            'go.inmobi.com',
            'zula.ir'
        ]), d = new Set([
            0x50,
            0x22b0,
            0x804
        ]), e = new Set([
            0x1bb,
            0x20fb,
            0x805
        ]), f = a['includes'](',') ? a['split'](',') : [a], g = () => '/' + Math['random']()['toString'](0x24)['substring'](0x2, 0xf) + '?ed=2560', h = '?encryption=none&security=none&fp=firefox&type=ws&host=' + b + '&path=' + encodeURIComponent(g()) + '#', i = '?encryption=none&security=tls&sni=' + b + '&fp=chrome&type=ws&host=' + b + '&path=' + encodeURIComponent(g()) + '#', j = f['flatMap'](l => {
            let m = [];
            return !b['includes']('pages.dev') && c['forEach'](n => {
                Array['from'](d)['forEach'](o => {
                    const p = b['split']('.')[0x0] + '-' + n + '-HTTP-' + o, q = atob(pt) + '://' + l + atob(at) + n + ':' + o + h + p;
                    m['push'](q);
                });
            }), c['forEach'](n => {
                Array['from'](e)['forEach'](o => {
                    const p = b['split']('.')[0x0] + '-' + n + '-HTTPS-' + o, q = atob(pt) + '://' + l + atob(at) + n + ':' + o + i + p;
                    m['push'](q);
                });
            }), m;
        });
    return btoa(j['join']('\x0a'));
}
async function generateIpSubscription(a, b) {
    try {
        const c = await fetch('https://raw.githubusercontent.com/NiREvil/vless/refs/heads/main/Cloudflare-IPs.json');
        if (!c['ok'])
            throw new Error('Failed\x20to\x20fetch\x20IPs:\x20' + c['status']);
        const d = await c['json'](), e = [
                ...d['ipv4'] || [],
                ...d['ipv6'] || []
            ]['map'](g => g['ip']);
        if (e['length'] === 0x0)
            return new Response('No\x20IPs\x20found.', { 'status': 0x194 });
        const f = e['map'](g => {
            const h = 'REvil-' + g, i = '/assets?' + CONSTANTS['URL_ED_PARAM'], j = '?encryption=none&security=tls&sni=' + b + '&fp=firefox&type=ws&host=' + b + '&path=' + encodeURIComponent(i) + '#' + encodeURIComponent(h);
            return CONSTANTS['VLESS_PROTOCOL'] + '://' + a + CONSTANTS['AT_SYMBOL'] + g + ':443' + j;
        });
        return new Response(btoa(f['join']('\x0a')), {
            'status': 0xc8,
            'headers': { 'Content-Type': 'text/plain;charset=utf-8' }
        });
    } catch (g) {
        return new Response('Failed\x20to\x20generate\x20IP\x20subscription:\x20' + g['message'], { 'status': 0x1f4 });
    }
}
function handleProxyConfig(a) {
    if (a) {
        const b = a['split'](',')['map'](f => f['trim']()), c = selectRandomAddress(b), [d, e = '443'] = c['split'](':');
        return {
            'ip': d,
            'port': e
        };
    } else {
        const f = proxyIP['includes'](':') ? proxyIP['split'](':')[0x1] : '443', g = proxyIP['split'](':')[0x0];
        return {
            'ip': g,
            'port': f
        };
    }
}
function selectRandomAddress(a) {
    const b = typeof a === 'string' ? a['split'](',')['map'](c => c['trim']()) : a;
    return b[Math['floor'](Math['random']() * b['length'])];
}
function parseEncodedQueryParams(a) {
    const b = {};
    if (a['includes']('%3F')) {
        const c = a['match'](/%3F(.+)$/);
        if (c) {
            const d = c[0x1], e = d['split']('&');
            for (const f of e) {
                const [g, h] = f['split']('=');
                if (h)
                    b[g] = decodeURIComponent(h);
            }
        }
    }
    return b;
}